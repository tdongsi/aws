{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Architecting on AWS: VPC with a web server in a public subnet ",
    "Parameters": {
        "VPCCIDR": {
            "Description": "CIDR Block for VPC",
            "Type": "String",
            "Default": "10.200.0.0/20",
            "AllowedValues": [ "10.200.0.0/20" ]
        },
        "PublicSubnet1Param": {
            "Description": "PublicSubnet1",
            "Type": "String",
            "Default": "10.200.0.0/24",
            "AllowedValues": [ "10.200.0.0/24" ]
        },
        "KeyName": {
            "Type": "String",
            "Description": "Keyname for the keypair that Qwiklab will use"
        }
    },
 "Mappings": {
    "AWSRegionToAMI": {
      "us-east-1": {
        "AMI": "ami-1ecae776"
      },
      "us-west-1": {
        "AMI": "ami-d114f295"
      },
      "us-west-2": {
        "AMI": "ami-e7527ed7"
      },
      "eu-west-1": {
        "AMI": "ami-a10897d6"
      },
      "eu-central-1": {
        "AMI": "ami-a8221fb5"
      },
      "sa-east-1": {
        "AMI": "ami-b52890a8"
      },
      "ap-southeast-1": {
        "AMI": "ami-68d8e93a"
      },
      "ap-southeast-2": {
        "AMI": "ami-fd9cecc7"
      },
      "ap-northeast-1": {
        "AMI": "ami-cbf90ecb"
      }
     }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags": [
                    {
                        "Key": "VPC",
                        "Value": "Architecting on AWS v5.0"
                    },
                    {
                        "Key": "Name",
                        "Value": "LabVPC"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": ["VPC", "InternetGateway"],
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "InternetGatewayId": {"Ref": "InternetGateway"}
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1Param"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "MapPublicIpOnLaunch" : "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicSubnet1"
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": ["VPC", "AttachGateway"],
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public"
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": ["VPC", "PublicRouteTable", "InternetGateway", "AttachGateway"],
            "Properties": {
                "RouteTableId": {"Ref": "PublicRouteTable"},
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {"Ref": "InternetGateway"}
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PublicRouteTable", "PublicSubnet1"],
            "Properties": {
                "SubnetId": {"Ref": "PublicSubnet1"},
                "RouteTableId": {"Ref": "PublicRouteTable"}
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "DependsOn": "VPC",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "WebServer": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "VPC",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "KeyName": {"Ref": "KeyName"},
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": "true",
                        "SubnetId": { "Ref": "PublicSubnet1" },
                        "GroupSet": [{ "Ref": "WebServerSG" }]
                    }
                ],
                "SourceDestCheck": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web Server 1"
                    }
                ]
            }
        },
        "WebServerSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "VPC",
            "Properties": {
                "GroupDescription": "Security group for the web servers",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    }
}